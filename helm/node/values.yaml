# Default values for node-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: "ghcr.io/kwallshv/nodeapp"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.99"

imagePullSecrets: 
  - name: docker-regcred
nameOverride: ""
fullnameOverride: ""

podName: node

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 5000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  requests:
    storage: 1Gi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
- name: test-data
  persistentVolumeClaim: 
    claimName: redis-test-data

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
- mountPath: /clientdata/benchmark
  name: test-data
  readOnly: true

env: 
  - name: REDIS_PASSWORD
    valueFrom: 
      secretKeyRef:
        name: redis
        key: redis-password

namespace: demo-web-app

reclaimPolicy: Retain

accessModes:
  - ReadWriteOnce

volumeMode: Filesystem

storageClassName: sc-sample-vsp-one-sds-block

nodeSelector: {}

tolerations: []

affinity: 
  podAffinity: 
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/instance
            operator: In
            values:
            - node
        topologyKey: eks.amazonaws.com/nodegroup

topologyKey: eks.amazonaws.com/nodegroup

benchmark: "redis-benchmark -h redis-master -a $REDIS_PASSWORD -q -n 1300 > /clientdata/benchmark/results.txt"
